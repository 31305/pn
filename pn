#!/usr/bin/env python3.10

from os import sys,system,path
import requests
import time
import pickle
import types

sg=types.SimpleNamespace()

sgss='sgs/'

def jh(s,ps):
    p=requests.get(s,stream=True,timeout=60)
    pl=bytes()
    sk=time.time()
    for pn in p.iter_content(1024):
        if time.time()-sk>1800:return
        pl=pl+pn
        if len(pl)>1000000:
            return
    open(ps,'wb').write(pl)

def prp(ns):
    sn=sgs+'prpt'
    if len(ns)!=3:return
    if ns[2]!=sn and ns[2].find('https://raw.githubusercontent.com')==0:
        jh(ns[2],sn)
    if not path.isfile(sn):return

ps=[(prp,1701943671.630241)]

def pk():
    if len(sys.argv)>1:
        if sys.argv[1]=='s' and len(sys.argv)==2:
            print(len(ps))
            return
        k=0
        try:
            k=int(sys.argv[1])
        except:pass 
        if k<=len(ps) and k!=0:
            ps[k-1][0](sys.argv)

def dd(kk,dr):
    pass

def ss(dk,nk):
    return [('kk1',1701942273.3994913,'12 https://raw.githubusercontent.com/31305/pn/master/pn')]

def dk():
    if os.isfile('s'):
        sg=pickle.load(open('s','rb'))

def nk():
    sss=ss(time.time(),time.time()-3600*48)
    if sg.ts==None:
        sg.ts={}
    for pl in sss:
        pk=0
        try:
            pk=pl[2].split()[0]
        except:pass
        if pk>0:pk=pk-1
        if pk<len(ps) and pl[1]<ps[pk][1]:
            tn=ps[pk][0](pl[2].split()[1])
            tmndl='tmnd'
            tm=tn.find(tmndl)
            if tm!=-1:
                m=float(tn[tm+len(tmndl)])
                if sg.ts.get(pk)==None:sg.ts[pk]=[]
                sg.ts=sg.ts+[(pl[0],m)]
pk()
